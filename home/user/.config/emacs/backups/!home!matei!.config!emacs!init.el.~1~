(require 'package)

(setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
                         ("melpa" . "http://melpa.org/packages/")))

(package-initialize)
(unless package-archive-contents
  (package-refresh-contents))

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
(require 'use-package)

(setq use-package-always-ensure t)

(use-package auto-package-update
  :config
  (setq auto-package-update-delete-old-versions t)
  (setq auto-package-update-hide-results t)
  (auto-package-update-maybe))

(use-package which-key
  :config (which-key-mode)
  (which-key-setup-side-window-bottom)
  (setq which-key-idle-delay 0.05))

(use-package magit
  :config (global-set-key (kbd "C-x g") 'magit-status))

(use-package evil
  :config (evil-mode))

(use-package org-bullets
  :hook (org-mode . org-bullets-mode))

(when (equal ""
	     (shell-command-to-string "git config user.name"))
  (shell-command "git config --global user.name \"MCotocel\"")
  (shell-command "git config --global user.email \"mcotocel@outlook.com\""))

(menu-bar-mode -1)
(toggle-scroll-bar -1)
(tool-bar-mode -1)

(use-package helm
  :diminish
  :config
  (helm-mode t))

(use-package helm-flx
  :config
  (helm-flx-mode t))

(setq helm-mini-default-sources '(helm-source-buffers-list
                                  helm-source-recentf
                                  helm-source-bookmarks
                                  helm-source-bookmark-set
                                  helm-source-buffer-not-found))
(use-package dashboard
  :config
  (dashboard-setup-startup-hook)
  (setq dashboard-startup-banner "~/Pictures/pfp_rounded_small.png")
  (setq dashboard-show-shortcuts nil)
  (setq dashboard-center-content t)
  (setq dashboard-set-heading-icons t)
  (setq dashboard-set-file-icons t)
  (setq dashboard-set-navigator t))

(use-package atom-one-dark-theme
  :config
  (load-theme 'atom-one-dark t))

(use-package all-the-icons)

(use-package ranger
  :config
  (ranger-override-dired-mode t))

(use-package evil-leader
  :config
  (global-evil-leader-mode)
  (evil-leader/set-leader "<SPC>")
  (evil-leader/set-key
    "<SPC>" 'helm-M-x
    "g" 'magit))

(use-package doom-modeline
  :init (doom-modeline-mode 1)
  :config
  (setq doom-modeline-height 30)
  (setq doom-modeline-bar-width 1))

(use-package centaur-tabs
  :demand
  :config
  (centaur-tabs-mode t)
  (centaur-tabs-headline-match)
  (setq centaur-tabs-style "bar")
  (setq centaur-tabs-height 32)
  (setq centaur-tabs-set-icons t)
  (setq centaur-tabs-set-bar 'left)
  (setq centaur-tabs-set-modified-marker t)
  (centaur-tabs-change-fonts "Iosevka Nerd Font" 100)
  :bind
  ("C-<prior>" . centaur-tabs-backward)
  ("C-<next>" . centaur-tabs-forward))

(use-package format-all
  :config
  (format-all-mode 1))

(setq backup-directory-alist '(("." . "~/.config/emacs/backups")))
(setq delete-old-versions t)
(setq kept-old-versions 15)
(setq vc-make-backup-files t)
(setq version-control t)

(set-frame-font "Iosevka Nerd Font-11" nil t)

(define-key evil-normal-state-map (kbd "M-s") 'save-buffer)
(define-key evil-normal-state-map (kbd "M-q") 'kill-current-buffer)
(define-key evil-normal-state-map (kbd "M-x") 'helm-M-x)
(define-key evil-normal-state-map (kbd "M-/") 'helm-find-files)
(define-key evil-normal-state-map (kbd "<C-tab>") 'helm-mini)
(define-key evil-normal-state-map (kbd "M-u") 'helm-show-kill-ring)
(define-key evil-normal-state-map (kbd "<C-return>") 'shell-pop)
(define-key evil-normal-state-map (kbd "C-H") 'evil-window-left)
(define-key evil-normal-state-map (kbd "C-J") 'evil-window-down)
(define-key evil-normal-state-map (kbd "C-K") 'evil-window-up)
(define-key evil-normal-state-map (kbd "C-L") 'evil-window-right)

(setq inhibit-splash-screen t
      inhibit-startup-echo-area-message t
      inhibit-startup-message t)

(visual-line-mode 1)

(setq require-final-newline t)

(set-default 'evil-normal-state-cursor 'hbar)
(set-default 'evil-insert-state-cursor 'bar)
(set-default 'evil-visual-state-cursor 'hbar)
(set-default 'evil-motion-state-cursor 'box)
(set-default 'evil-replace-state-cursor 'box)
(set-default 'evil-operator-state-cursor 'hbar)
(set-cursor-color "#80D1FF")

(global-display-line-numbers-mode)
(setq display-line-numbers-type 'relative)

(set-frame-parameter nil 'internal-border-width 20)

(fset 'yes-or-no-p 'y-or-n-p)

(setq custom-file "~/.config/emacs/etc/custom.el")
