(require 'package)

(setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
                         ("melpa" . "http://melpa.org/packages/")))

(package-initialize)
(unless package-archive-contents
  (package-refresh-contents))

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
(require 'use-package)

(setq use-package-always-ensure t)

(use-package auto-package-update
  :defer 10
  :config
  (setq auto-package-update-delete-old-versions t)
  (setq auto-package-update-hide-results t)
  (auto-package-update-maybe))

(use-package which-key
  :defer 5
  :config (which-key-mode)
          (which-key-setup-side-window-bottom)
          (setq which-key-idle-delay 0.05))

(use-package magit
  :config (global-set-key (kbd "C-x g") 'magit-status))

(use-package evil
    :config (evil-mode))

(use-package org-bullets
  :hook (org-mode . org-bullets-mode))

(when (equal ""
(shell-command-to-string "git config user.name"))
  (shell-command "git config --global user.name \"MCotocel\"")
  (shell-command "git config --global user.email \"mcotocel@outlook.com\""))

(menu-bar-mode -1)
(toggle-scroll-bar -1)
(tool-bar-mode -1)

(use-package helm
 :diminish
 :config
 (helm-mode t))

(use-package helm-flx
    :config
    (helm-flx-mode t))

(setq helm-mini-default-sources '(helm-source-buffers-list
                                    helm-source-recentf
                                    helm-source-bookmarks
                                    helm-source-bookmark-set
                                    helm-source-buffer-not-found))
(use-package dashboard
  :config
  (dashboard-setup-startup-hook)
  (setq dashboard-startup-banner 'logo)
  (setq dashboard-show-shortcuts nil)
  (setq dashboard-center-content t)
  (setq dashboard-set-heading-icons t)
  (setq dashboard-set-file-icons t)
  (setq dashboard-set-navigator t))

(use-package atom-one-dark-theme
  :config
  (load-theme 'atom-one-dark t))

(use-package all-the-icons)

(use-package ranger
    :config
    (ranger-override-dired-mode t))

(use-package evil-leader
    :config
    (global-evil-leader-mode)
    (evil-leader/set-leader "<SPC>")
    (evil-leader/set-key
        "<SPC>" 'helm-M-x
        "g" 'magit))

(setq backup-directory-alist '(("." . "~/.emacs.d/backups")))
(setq delete-old-versions t)
(setq kept-old-versions 15)
(setq vc-make-backup-files t)
(setq version-control t)

(set-frame-font "Iosevka Nerd Font-11" nil t)

(define-key evil-normal-state-map (kbd "M-s") 'save-buffer)
(define-key evil-normal-state-map (kbd "M-q") 'kill-current-buffer)
(define-key evil-normal-state-map (kbd ":") 'helm-M-x)
(define-key evil-normal-state-map (kbd "M-/") 'helm-find-files)
(define-key evil-normal-state-map (kbd "<C-tab>") 'helm-mini)
(define-key evil-normal-state-map (kbd "M-u") 'helm-show-kill-ring)
(define-key evil-normal-state-map (kbd "<C-return>") 'shell-pop)
(define-key evil-normal-state-map (kbd "C-H") 'evil-window-left)
(define-key evil-normal-state-map (kbd "C-J") 'evil-window-down)
(define-key evil-normal-state-map (kbd "C-K") 'evil-window-up)
(define-key evil-normal-state-map (kbd "C-L") 'evil-window-right)

(setq inhibit-splash-screen t
      inhibit-startup-echo-area-message t
      inhibit-startup-message t)

(visual-line-mode 1)

(setq require-final-newline t)

(set-default 'cursor-type 'bar)
(set-cursor-color "#80D1FF")

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   '(ranger which-key use-package shell-pop restart-emacs pdf-tools org-bullets magit helm evil-collection dashboard auto-package-update atom-one-dark-theme all-the-icons)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
